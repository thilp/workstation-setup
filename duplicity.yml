# This is an Ansible playbook.
# Run it with: ansible-playbook -K <THIS-FILE>
- hosts: localhost
  become: true
  vars_prompt:
    - name: passphrase
      prompt: Duplicity passphrase?
      private: yes
      default: "{{ ansible_env.PASSPHRASE }}"
  vars:
    home: "{{ ansible_env.HOME }}"
    backup_dir: "{{home}}/backups"
    backup_archive: "{{backup_archive}}.tar"
    restored_dir: "{{home}}/restored"
  when: backup_archive is exists
  tasks:
    - assert:
        that: (passphrase | length) > 0
        fail_msg: Provide your Duplicity passphrase in the PASSPHRASE env variable!
        success_msg: The PASSPHRASE env variable is provided.
    - package:
        state: present
        name: duplicity
    - name: Unarchive backups
      unarchive:
        remote_src: yes
        src: "{{backup_archive}}"
        dest: "{{backup_dir}}"
    - name: Restore backups with Duplicity
      command: "duplicity restore file://{{backup_dir}} {{restored_dir}}"
      creates: "{{restored_dir}}"
      environment:
        PASSPHRASE: "{{passphrase}}"
    - name: Setup home
      block:
        - find:
            paths: "{{restored_dir}}{{home}}"
            recurse: no
            hidden: yes
          register: home_files
        - synchronize:
            src: "{{ item.path }}"
            dest: "{{home}}/{{ item.path | basename }}"
          with_items: "{{ home_files.files }}"
    - name: Setup root environment
      synchronize:
        src: "{{restored_dir}}/root/{{item}}"
        dest: "/root/{{item}}"
      with_items:
        - backup.py
        - .config
    - name: Setup cronjobs
      block:
        - synchronize:
            src: "{{restored_dir}}/etc/{{item}}"
            dest: "/etc/{{item}}"
          with_items:
            - cron.3days/full-backup
            - cron.weekly/compact-backups
        - cron:
            name: Incremental backups
            state: present
            minute: 0
            hour: "*/3"
            job: env PASSPHRASE={{ passphrase | quote }} BACKUP_MODE=incr
                  /root/backup.py >>/var/log/backup.log 2>&1
    - name: Cleanup
      file:
        path: "{{restored_dir}}"
        state: absent
